"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/api/wordpressApi.ts":
/*!*********************************!*\
  !*** ./src/api/wordpressApi.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getActivePopups: function() { return /* binding */ getActivePopups; },\n/* harmony export */   getAllContent: function() { return /* binding */ getAllContent; },\n/* harmony export */   getContentBySlug: function() { return /* binding */ getContentBySlug; },\n/* harmony export */   getFrontPage: function() { return /* binding */ getFrontPage; },\n/* harmony export */   getMenuItems: function() { return /* binding */ getMenuItems; },\n/* harmony export */   getMenuItemsByLocation: function() { return /* binding */ getMenuItemsByLocation; },\n/* harmony export */   getPostNavigation: function() { return /* binding */ getPostNavigation; },\n/* harmony export */   getSiteInfo: function() { return /* binding */ getSiteInfo; },\n/* harmony export */   searchSite: function() { return /* binding */ searchSite; }\n/* harmony export */ });\n// src/api/wordpress.ts\nconst API_URL = \"http://penkode-headless.local/wp-json\";\n// ********************** Core Fetch API Function **********************\nasync function fetchAPI() {\n    let query = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\", options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    // Security check: if the API URL is not configured, we cannot proceed.\n    if (!API_URL) {\n        console.error(\"La variable de entorno NEXT_PUBLIC_WORDPRESS_API_URL no est\\xe1 configurada.\");\n        return null;\n    }\n    const headers = {\n        \"Content-Type\": \"application/json\"\n    };\n    // Safely constructs the full URL, avoiding double slashes.\n    const requestUrl = \"\".concat(API_URL.replace(/\\/$/, \"\"), \"/\").concat(query.replace(/^\\//, \"\"));\n    try {\n        const { method = \"GET\", headers: customHeaders = {}, body = null, next } = options;\n        const res = await fetch(requestUrl, {\n            method,\n            headers: {\n                ...headers,\n                ...customHeaders\n            },\n            body: body ? JSON.stringify(body) : null,\n            // Next.js cache options (revalidates every hour by default, but can be overridden)\n            next: next || {\n                revalidate: 3600\n            }\n        });\n        if (!res.ok) {\n            // The WP search endpoint returns 404 if there are no results.\n            // We treat it as a success case with an empty array instead of an error.\n            if (res.status === 404 && query.includes(\"/wp/v2/search\")) {\n                return []; // We return an empty array and cast it to the expected type.\n            }\n            // For any other error, log it and return null.\n            try {\n                const errorBody = await res.json();\n                console.error(\"API Error for \".concat(query, \":\"), errorBody);\n            } catch (e) {\n                console.error(\"API Error for \".concat(query, \": \").concat(res.status, \" \").concat(res.statusText));\n            }\n            // We return null so the calling component can handle it.\n            return null;\n        }\n        const json = await res.json();\n        return json;\n    } catch (error) {\n        // If the fetch fails (e.g., WP is unavailable), we catch the error.\n        console.error(\"Fetch failed for \".concat(requestUrl, \":\"), error instanceof Error ? error.message : String(error));\n        // We return null to prevent the app from crashing on the server.\n        return null;\n    }\n}\n/**\r\n * Fetches basic site information from a custom endpoint.\r\n * EXAMPLE: This function assumes you have created a custom endpoint in your\r\n * WordPress functions.php that returns the site title and description.\r\n */ async function getSiteInfo() {\n    const data = await fetchAPI(\"/custom/v1/site-info\");\n    return data;\n}\n/**\r\n * GENERIC: Fetches a collection of items from any CPT.\r\n * @param postType The CPT slug (e.g., 'posts', 'pages', 'recursos').\r\n * @param params Optional query string (e.g., '?per_page=10&_embed').\r\n */ async function getAllContent(postType) {\n    let params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n    const data = await fetchAPI(\"/wp/v2/\".concat(postType).concat(params));\n    return data || [];\n}\n/**\r\n * GENERIC: Fetches a content item by its slug.\r\n * @param postType The CPT slug (e.g., 'posts', 'pages', 'recursos').\r\n * @param slug The item's slug.\r\n */ async function getContentBySlug(postType, slug) {\n    const data = await fetchAPI(\"/wp/v2/\".concat(postType, \"?slug=\").concat(slug, \"&_embed\")); // fetchAPI can now return null\n    var _data_;\n    return (_data_ = data === null || data === void 0 ? void 0 : data[0]) !== null && _data_ !== void 0 ? _data_ : null;\n}\n/**\r\n * Fetches the page set as the \"Front Page\" in WordPress reading settings.\r\n * Uses a custom endpoint for direct and efficient fetching.\r\n */ async function getFrontPage() {\n    return await fetchAPI(\"/custom/v1/frontpage\");\n}\n/******************** (MODALES/POPUPS CPT) ****************************/ /**\r\n * Fetches all modals that are configured as active popups.\r\n */ async function getActivePopups() {\n    return await fetchAPI(\"/custom/v1/active-popups\");\n}\n/******************** WORDPRESS MENUS ****************************/ /**\r\n * Fetches menu items by their slug from the custom endpoint.\r\n * @param slug The menu slug to fetch (e.g., 'main-menu').\r\n */ async function getMenuItems(slug) {\n    return await fetchAPI(\"/custom/v1/menus/\".concat(slug));\n}\n/**\r\n * Fetches menu items by their THEME LOCATION.\r\n * @param location The menu location slug (e.g., 'mainnav').\r\n */ async function getMenuItemsByLocation(location) {\n    return await fetchAPI(\"/custom/v1/menu-location/\".concat(location));\n}\n/******************** WORDPRESS POST NAVIGATION ****************************/ /**\r\n * Fetches the previous and next post for navigation.\r\n * @param postId The ID of the current post.\r\n * @param postType The post type (e.g., 'posts', 'recursos').\r\n */ async function getPostNavigation(postId, postType) {\n    return await fetchAPI(\"/custom/v1/post-navigation?post_id=\".concat(postId, \"&post_type=\").concat(postType));\n}\n/******************** WORDPRESS SEARCH ****************************/ /**\r\n * Searches the site using a custom search endpoint.\r\n * @param term The search term.\r\n */ async function searchSite(term) {\n    if (!term) return [];\n    // We use our custom endpoint which gives us full control over the search.\n    // This avoids the issues of the native WP REST API search.\n    const searchQuery = \"/custom/v1/search?term=\".concat(encodeURIComponent(term));\n    const data = await fetchAPI(searchQuery);\n    // The fetchAPI function can now return null on error, or an empty array on 404.\n    // We ensure to always return an array so that components don't fail.\n    return data || [];\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/api/wordpressApi.ts\n"));

/***/ })

});