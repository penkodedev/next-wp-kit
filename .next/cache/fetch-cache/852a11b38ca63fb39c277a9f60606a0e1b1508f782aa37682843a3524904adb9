{"kind":"FETCH","data":{"headers":{"access-control-allow-credentials":"true","access-control-allow-headers":"Authorization, X-WP-Nonce, Content-Disposition, Content-MD5, Content-Type","access-control-allow-methods":"GET","access-control-allow-origin":"http://localhost:3000","access-control-expose-headers":"X-WP-Total, X-WP-TotalPages, Link","allow":"GET","connection":"keep-alive","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Tue, 14 Oct 2025 15:12:20 GMT","link":"<http://penkode-headless.local/wp-json/>; rel=\"https://api.w.org/\"","server":"nginx/1.26.1","transfer-encoding":"chunked","vary":"Accept-Encoding, Origin","x-content-type-options":"nosniff","x-powered-by":"PHP/8.2.27","x-robots-tag":"noindex","x-wp-total":"9","x-wp-totalpages":"1"},"body":"
[{"id":279,"date":"2025-10-05T08:26:57","date_gmt":"2025-10-05T06:26:57","guid":{"rendered":"http:\/\/penkode-headless.local\/?page_id=279"},"modified":"2025-10-09T12:20:21","modified_gmt":"2025-10-09T10:20:21","slug":"ui-components","status":"publish","type":"page","link":"http:\/\/penkode-headless.local\/ui-components\/","title":{"rendered":"UI Components"},"content":{"rendered":"\n<div class=\"wp-block-columns gap is-layout-flex wp-container-core-columns-is-layout-9d6595d7 wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<p>Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to <\/p>\n<\/div>\n\n\n\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<p>create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components to see how they can be integrated into your own projects. <strong>All of these elements are custom-built and crafted without the use of any plugins.<\/strong><\/p>\n<\/div>\n<\/div>\n\n\n\n<h2 class=\"wp-block-heading\">Buttons<\/h2>\n\n\n\n<div class=\"wp-block-buttons gap is-vertical is-content-justification-left is-nowrap is-layout-flex wp-container-core-buttons-is-layout-5e962826 wp-block-buttons-is-layout-flex\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\" href=\"http:\/\/penkode-headless.local\/modales\/modal-ejemplo-2\/\" rel=\"#modal\">button little &#8211; ventana modal<\/a><\/div>\n\n\n\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\" href=\"http:\/\/penkode-headless.local\/modales\/modal-ejemplo\/\">button medium<\/a><\/div>\n\n\n\n<div class=\"wp-block-button has-custom-width wp-block-button__width-50\"><a class=\"wp-block-button__link wp-element-button\">button big<\/a><\/div>\n<\/div>\n\n\n\n<div style=\"height:100px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<div class=\"wp-block-cover has-parallax full-width\"><div class=\"wp-block-cover__image-background wp-image-85 has-parallax\" style=\"background-position:50% 50%;background-image:url(https:\/\/penkode.com\/framework\/wp-content\/uploads\/2021\/06\/pauloramalho-0321-2544.jpg)\"><\/div><span aria-hidden=\"true\" class=\"wp-block-cover__background has-background-dim\"><\/span><div class=\"wp-block-cover__inner-container is-layout-flow wp-block-cover-is-layout-flow\">\n<div style=\"height:174px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<h2 class=\"wp-block-heading has-text-align-center has-large-font-size\">Full Width Div<\/h2>\n\n\n\n<p class=\"has-text-align-center\">This CSS class, .full-width, is used to position a &lt;div&gt; element outside of the Grid Layout and extend its width to 100% of the viewport width (100vw).<\/p>\n\n\n\n<div style=\"height:177px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/div><\/div>\n\n\n\n<div style=\"height:47px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<h2 class=\"wp-block-heading\">Modal window<\/h2>\n\n\n\n<p>This modal is generated by custom template code This modal displays content generated using native theme shortcodes. The content is dynamically inserted using a native theme shortcode , allowing for flexible and customizable content within the modal. The modal also includes a close button for user interaction.<\/p>\n\n\n\n<div class=\"wp-block-buttons is-horizontal is-content-justification-left is-layout-flex wp-container-core-buttons-is-layout-7e5fce0a wp-block-buttons-is-layout-flex\">\n<div class=\"wp-block-button\" id=\"openModal2\"><a class=\"wp-block-button__link wp-element-button\">Click to see a modal window with custom content<\/a><\/div>\n<\/div>\n\n\n\n<h2 class=\"wp-block-heading\"><\/h2>\n\n\n\n<div style=\"height:42px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<h2 class=\"wp-block-heading\">Custom HTML \u00abSee More\u00bb with shortcodes<\/h2>\n\n\n\n<p>This \u00abSee More\u00bb block features a collapsible text container that initially shows a limited amount of content. Users can click the \u00abVer m\u00e1s\u00bb button to expand and reveal the full content, which smoothly transitions into view. When expanded, the button text changes to \u00abVer menos\u00bb and the arrow icon rotates to indicate the toggle state. The design includes a gradient overlay at the bottom of the container to subtly hint at additional content. This block is useful for displaying excerpts or summaries with an option for users to read more if they choose.<\/p>\n\n\n\n<div class=\"see-more-container\">\n    <div class=\"text-container\">\n        \n<p>Este portal est\u00e1 vivo y se construye de manera colectiva. Creemos que el conocimiento y la pr\u00e1ctica se enriquecen cuando se comparten. Por eso, te invitamos a ser parte de esta red de docentes y personas comprometidas con la educaci\u00f3n antirracista:<\/p>\n\n\n\n<ol class=\"wp-block-list\">\n<li><strong>Comparte recursos<\/strong> Ayuda a m\u00e1s docentes ingresando recursos de calidad que puedan inspirar y transformar: libros, art\u00edculos, gu\u00edas, v\u00eddeos o juegos. Solo te llevar\u00e1 10-15 minutos y tu aporte har\u00e1 que la educaci\u00f3n sea m\u00e1s inclusiva y transformadora. S\u00fabelos a trav\u00e9s de nuestro <a href=\"https:\/\/docs.google.com\/forms\/d\/185AJ4Jl86Z6tyrOxukqlo2Cgp0bro8RcMfaXr23Am2k\/preview\" target=\"_blank\" rel=\"noreferrer noopener\">formulario online<\/a><\/li>\n\n\n\n<li><strong>\u00danete a la red<\/strong> Forma parte del grupo de WhatsApp de la Red \u201cRepensando la Educaci\u00f3n desde el Antirracismo\u201d, donde compartimos ideas, experiencias y noticias.<\/li>\n\n\n\n<li><strong>Deja tu rese\u00f1a:<\/strong> Comenta sobre los recursos: cu\u00e9ntanos si lo has usado, c\u00f3mo te ha servido y qu\u00e9 impacto tuvo. Tus aportes ayudan a la comunidad educativa global.<\/li>\n\n\n\n<li><strong>Colabora con MAD \u00c1frica<\/strong> Si quieres implicarte m\u00e1s de cerca, escr\u00edbenos a <a href=\"mailto:madafrica@madafrica.es\">madafrica@madafrica.es<\/a>. Siempre buscamos alianzas y manos amigas para seguir transformando la educaci\u00f3n.<\/li>\n<\/ol>\n\n\n\n<div class=\"wp-block-group alignfull is-content-justification-center\" style=\"margin-top:0;margin-bottom:0\"><div class=\"wp-block-group__inner-container is-layout-constrained wp-block-group-is-layout-constrained\">\n<div style=\"height:var(--wp--preset--spacing--20)\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<div style=\"height:100px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<div class=\"wp-block-group alignwide\"><div class=\"wp-block-group__inner-container is-layout-flow wp-block-group-is-layout-flow\">\n<div class=\"wp-block-columns alignwide are-vertically-aligned-top is-layout-flex wp-container-core-columns-is-layout-ac3ebc3b wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-vertically-aligned-top is-content-justification-left is-layout-constrained wp-container-core-column-is-layout-02d07192 wp-block-column-is-layout-constrained\">\n<h1 class=\"wp-block-heading\">Descubre un reino de oportunidades.<\/h1>\n<\/div>\n\n\n\n<div class=\"wp-block-column is-vertically-aligned-top is-layout-flow wp-block-column-is-layout-flow\" style=\"flex-basis:40%\">\n<p>Explorando el complejo tapiz de la vida, las opciones revelan rutas hacia lo excepcional, requiriendo innovaci\u00f3n, curiosidad y valent\u00eda para un viaje profundamente satisfactorio.<\/p>\n\n\n\n<div class=\"wp-block-buttons is-layout-flex wp-block-buttons-is-layout-flex\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Empezar<\/a><\/div>\n<\/div>\n<\/div>\n<\/div>\n\n\n\n<div style=\"height:var(--wp--preset--spacing--20)\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" src=\"https:\/\/pd.w.org\/2023\/07\/44364b18862589f06.53436652.jpg\" alt=\"\" style=\"aspect-ratio:16\/9;object-fit:cover\"\/><\/figure>\n<\/div><\/div>\n\n\n\n<div style=\"height:var(--wp--preset--spacing--20)\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/div><\/div>\n\n    <\/div>\n    <p class=\"toggle-btn\">\n        <span class=\"toggle-text\">Ver m\u00e1s<\/span>\n        <svg class=\"arrow-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n            <path d=\"M4 6L8 10L12 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\/>\n        <\/svg>\n    <\/p>\n<\/div>\n\n<style>\n    .see-more-container {\n        border: 1px solid #ccc;\n        position: relative;\n        padding: 40px 40px 80px 40px;\n    }\n\n    .text-container {\n        position: relative;\n        max-height: 150px;\n        overflow: hidden;\n        transition: max-height 0.3s ease;\n    }\n\n    .text-content {\n        margin: 0;\n    }\n\n    .text-container::after {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: 50px;\n        background: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1));\n        pointer-events: none;\n    }\n\n    .text-container.expanded {\n        max-height: none;\n    }\n\n    .text-container.expanded::after {\n        display: none;\n    }\n\n    .toggle-btn {\n        position: absolute;\n        bottom: 0px;\n        left: 90px;\n        transform: translateX(-50%);\n        padding: 5px 10px;\n        color: blue;\n        cursor: pointer;\n        text-decoration: underline;\n        z-index: 10;\n        display: flex;\n        align-items: center;\n        gap: 5px;\n    }\n\n    .toggle-btn:hover {\n        color: #000;\n    }\n\n    .arrow-icon {\n        transition: transform 0.3s ease;\n    }\n\n    .text-container.expanded ~ .toggle-btn .arrow-icon {\n        transform: rotate(180deg);\n    }\n<\/style>\n\n<script>\ndocument.addEventListener('DOMContentLoaded', function() {\n    const containers = document.querySelectorAll('.see-more-container');\n\n    containers.forEach(container => {\n        const toggleBtn = container.querySelector('.toggle-btn');\n        const textContainer = container.querySelector('.text-container');\n        const toggleText = container.querySelector('.toggle-text'); \/\/ Cambiar querySelectorAll a querySelector\n\n        toggleBtn.addEventListener('click', () => {\n            textContainer.classList.toggle('expanded');\n            toggleText.textContent = textContainer.classList.contains('expanded') ? 'Ver menos' : 'Ver m\u00e1s';\n        });\n    });\n});\n\n<\/script>\n\n\n\n<div style=\"height:57px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<h2 class=\"wp-block-heading\">Native WordPress Details<\/h2>\n\n\n\n<details class=\"wp-block-details is-layout-flow wp-block-details-is-layout-flow\"><summary>Lorem Ipsum is not simply random text<\/summary>\n<p>Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \u00abde Finibus Bonorum et Malorum\u00bb (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \u00abLorem ipsum dolor sit amet..\u00bb, comes from a line in section 1.10.32.<\/p>\n\n\n\n<p>The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \u00abde Finibus Bonorum et Malorum\u00bb by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.<\/p>\n<\/details>\n\n\n\n<p><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-279","page","type-page","status-publish","hentry"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v26.1.1 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\r\n<title>UI Components - PENKODE - WP Headless Theme<\/title>\r\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\r\n<link rel=\"canonical\" href=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:locale\" content=\"es_ES\" \/>\r\n<meta property=\"og:type\" content=\"article\" \/>\r\n<meta property=\"og:title\" content=\"UI Components - PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"og:description\" content=\"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]\" \/>\r\n<meta property=\"og:url\" content=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:site_name\" content=\"PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"article:modified_time\" content=\"2025-10-09T10:20:21+00:00\" \/>\r\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\r\n<meta name=\"twitter:label1\" content=\"Tiempo de lectura\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutos\" \/>\r\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"url\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"name\":\"UI Components - PENKODE - WP Headless Theme\",\"isPartOf\":{\"@id\":\"http:\/\/penkode-headless.local\/#website\"},\"datePublished\":\"2025-10-05T06:26:57+00:00\",\"dateModified\":\"2025-10-09T10:20:21+00:00\",\"breadcrumb\":{\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\"},\"inLanguage\":\"es\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"http:\/\/penkode-headless.local\/ui-components\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"http:\/\/penkode-headless.local\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"UI Components\"}]},{\"@type\":\"WebSite\",\"@id\":\"http:\/\/penkode-headless.local\/#website\",\"url\":\"http:\/\/penkode-headless.local\/\",\"name\":\"PENKODE - WP Headless Theme\",\"description\":\"Headless WP theme framework for Next.js\/React\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"http:\/\/penkode-headless.local\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"es\"}]}<\/script>\r\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"UI Components - PENKODE - WP Headless Theme","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"http:\/\/penkode-headless.local\/ui-components\/","og_locale":"es_ES","og_type":"article","og_title":"UI Components - PENKODE - WP Headless Theme","og_description":"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]","og_url":"http:\/\/penkode-headless.local\/ui-components\/","og_site_name":"PENKODE - WP Headless Theme","article_modified_time":"2025-10-09T10:20:21+00:00","twitter_card":"summary_large_image","twitter_misc":{"Tiempo de lectura":"3 minutos"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"http:\/\/penkode-headless.local\/ui-components\/","url":"http:\/\/penkode-headless.local\/ui-components\/","name":"UI Components - PENKODE - WP Headless Theme","isPartOf":{"@id":"http:\/\/penkode-headless.local\/#website"},"datePublished":"2025-10-05T06:26:57+00:00","dateModified":"2025-10-09T10:20:21+00:00","breadcrumb":{"@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb"},"inLanguage":"es","potentialAction":[{"@type":"ReadAction","target":["http:\/\/penkode-headless.local\/ui-components\/"]}]},{"@type":"BreadcrumbList","@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"http:\/\/penkode-headless.local\/"},{"@type":"ListItem","position":2,"name":"UI Components"}]},{"@type":"WebSite","@id":"http:\/\/penkode-headless.local\/#website","url":"http:\/\/penkode-headless.local\/","name":"PENKODE - WP Headless Theme","description":"Headless WP theme framework for Next.js\/React","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"http:\/\/penkode-headless.local\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"es"}]}},"_links":{"self":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/279","targetHints":{"allow":["GET"]}}],"collection":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/comments?post=279"}],"version-history":[{"count":19,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/279\/revisions"}],"predecessor-version":[{"id":334,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/279\/revisions\/334"}],"wp:attachment":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/media?parent=279"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}},{"id":84,"date":"2025-09-12T08:44:56","date_gmt":"2025-09-12T06:44:56","guid":{"rendered":"http:\/\/penkode-headless.local\/?page_id=84"},"modified":"2025-09-13T07:34:28","modified_gmt":"2025-09-13T05:34:28","slug":"autodiagnostico","status":"publish","type":"page","link":"http:\/\/penkode-headless.local\/autodiagnostico\/","title":{"rendered":"Autodiagn\u00f3stico"},"content":{"rendered":"<\/p>\n<h1 class=\"wp-block-heading\">XAMLE: Autodiagn\u00f3stico antirracista<\/h1>\n<\/p>\n<h2 class=\"wp-block-heading\">Para reflexionar y transformar tu pr\u00e1ctica docente<\/h2>\n<\/p>\n<div class=\"wp-block-columns is-layout-flex wp-container-core-columns-is-layout-9d6595d7 wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" decoding=\"async\" width=\"840\" height=\"745\" src=\"http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/xamle-encuesta.jpg\" alt=\"\" class=\"wp-image-139\" srcset=\"http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/xamle-encuesta.jpg 840w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/xamle-encuesta-300x266.jpg 300w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/xamle-encuesta-768x681.jpg 768w\" sizes=\"auto, (max-width: 840px) 100vw, 840px\" \/><\/figure>\n<\/div>\n<\/p>\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<p>Dedicar unos minutos a este autodiagn\u00f3stico puede ayudarte a identificar puntos ciegos, reflexionar sobre tus posibles sesgos y fortalecer tu pr\u00e1ctica educativa desde un enfoque antirracista y transformador. <strong>El cuestionario es r\u00e1pido, sencillo y se responde mediante preguntas cerradas, organizadas en cuatro \u00e1mbitos clave<\/strong>.<\/p>\n<\/p>\n<p>Al finalizar recibir\u00e1s una valoraci\u00f3n general y recomendaciones concretas adaptadas a tu pr\u00e1ctica, que te permitir\u00e1n avanzar de manera consciente hacia una educaci\u00f3n m\u00e1s inclusiva y justa. No hay respuestas correctas ni incorrectas: <strong>cada respuesta es una oportunidad para aprender<\/strong> y abrir nuevas posibilidades en tu aula.<\/p>\n<\/div>\n<\/div>\n<\/p>\n<div class=\"wp-block-buttons is-content-justification-left is-layout-flex wp-container-core-buttons-is-layout-fdcfc74e wp-block-buttons-is-layout-flex\">\n<div class=\"wp-block-button has-custom-width wp-block-button__width-100\"><a class=\"wp-block-button__link has-medium-font-size has-custom-font-size wp-element-button\" href=\"https:\/\/xamle.madafrica.es\/\" target=\"_blank\" rel=\"noreferrer noopener\">Hacer el Autodiagn\u00f3stico XAMLE gratuito<\/a><\/div>\n<\/div>\n<\/p>\n<div style=\"height:56px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/p>\n<blockquote class=\"wp-block-quote is-layout-flow wp-block-quote-is-layout-flow\">\n<p>El cuestionario es r\u00e1pido, sencillo y se responde mediante preguntas cerradas, organizadas en cuatro \u00e1mbitos clave y cada respuesta es una oportunidad para aprender y abrir nuevas posibilidades en tu aula.<\/p>\n<\/p>\n<\/blockquote>\n","protected":false},"excerpt":{"rendered":"<p>XAMLE: Autodiagn\u00f3stico antirracista Para reflexionar y transformar tu pr\u00e1ctica docente Dedicar unos minutos a este autodiagn\u00f3stico puede ayudarte a identificar puntos ciegos, reflexionar sobre tus posibles sesgos y fortalecer tu pr\u00e1ctica educativa desde un enfoque antirracista y transformador. El cuestionario es r\u00e1pido, sencillo y se responde mediante preguntas cerradas, organizadas en cuatro \u00e1mbitos clave. Al [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-84","page","type-page","status-publish","hentry"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v26.1.1 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\r\n<title>UI Components - PENKODE - WP Headless Theme<\/title>\r\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\r\n<link rel=\"canonical\" href=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:locale\" content=\"es_ES\" \/>\r\n<meta property=\"og:type\" content=\"article\" \/>\r\n<meta property=\"og:title\" content=\"UI Components - PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"og:description\" content=\"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]\" \/>\r\n<meta property=\"og:url\" content=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:site_name\" content=\"PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"article:modified_time\" content=\"2025-10-09T10:20:21+00:00\" \/>\r\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\r\n<meta name=\"twitter:label1\" content=\"Tiempo de lectura\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutos\" \/>\r\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"url\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"name\":\"UI Components - PENKODE - WP Headless Theme\",\"isPartOf\":{\"@id\":\"http:\/\/penkode-headless.local\/#website\"},\"datePublished\":\"2025-10-05T06:26:57+00:00\",\"dateModified\":\"2025-10-09T10:20:21+00:00\",\"breadcrumb\":{\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\"},\"inLanguage\":\"es\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"http:\/\/penkode-headless.local\/ui-components\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"http:\/\/penkode-headless.local\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"UI Components\"}]},{\"@type\":\"WebSite\",\"@id\":\"http:\/\/penkode-headless.local\/#website\",\"url\":\"http:\/\/penkode-headless.local\/\",\"name\":\"PENKODE - WP Headless Theme\",\"description\":\"Headless WP theme framework for Next.js\/React\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"http:\/\/penkode-headless.local\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"es\"}]}<\/script>\r\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"UI Components - PENKODE - WP Headless Theme","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"http:\/\/penkode-headless.local\/ui-components\/","og_locale":"es_ES","og_type":"article","og_title":"UI Components - PENKODE - WP Headless Theme","og_description":"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]","og_url":"http:\/\/penkode-headless.local\/ui-components\/","og_site_name":"PENKODE - WP Headless Theme","article_modified_time":"2025-10-09T10:20:21+00:00","twitter_card":"summary_large_image","twitter_misc":{"Tiempo de lectura":"3 minutos"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"http:\/\/penkode-headless.local\/ui-components\/","url":"http:\/\/penkode-headless.local\/ui-components\/","name":"UI Components - PENKODE - WP Headless Theme","isPartOf":{"@id":"http:\/\/penkode-headless.local\/#website"},"datePublished":"2025-10-05T06:26:57+00:00","dateModified":"2025-10-09T10:20:21+00:00","breadcrumb":{"@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb"},"inLanguage":"es","potentialAction":[{"@type":"ReadAction","target":["http:\/\/penkode-headless.local\/ui-components\/"]}]},{"@type":"BreadcrumbList","@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"http:\/\/penkode-headless.local\/"},{"@type":"ListItem","position":2,"name":"UI Components"}]},{"@type":"WebSite","@id":"http:\/\/penkode-headless.local\/#website","url":"http:\/\/penkode-headless.local\/","name":"PENKODE - WP Headless Theme","description":"Headless WP theme framework for Next.js\/React","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"http:\/\/penkode-headless.local\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"es"}]}},"_links":{"self":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/84","targetHints":{"allow":["GET"]}}],"collection":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/comments?post=84"}],"version-history":[{"count":22,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/84\/revisions"}],"predecessor-version":[{"id":143,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/84\/revisions\/143"}],"wp:attachment":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/media?parent=84"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}},{"id":19,"date":"2025-09-11T12:47:08","date_gmt":"2025-09-11T10:47:08","guid":{"rendered":"http:\/\/penkode-headless.local\/?page_id=19"},"modified":"2025-09-15T15:29:10","modified_gmt":"2025-09-15T13:29:10","slug":"contacta","status":"publish","type":"page","link":"http:\/\/penkode-headless.local\/contacta\/","title":{"rendered":"Contacta"},"content":{"rendered":"<\/p>\n<div class=\"wp-block-columns is-layout-flex wp-container-core-columns-is-layout-9d6595d7 wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<p>Nos encanta atenderte. Por favor, rellena correctamente los campos de abajo si quieres contactarnos.<\/p>\n<\/p>\n<p>\n<div class=\"wpcf7 no-js\" id=\"wpcf7-f34-o1\" lang=\"es-ES\" dir=\"ltr\" data-wpcf7-id=\"34\">\n<div class=\"screen-reader-response\"><p role=\"status\" aria-live=\"polite\" aria-atomic=\"true\"><\/p> <ul><\/ul><\/div>\n<form action=\"\/wp-json\/wp\/v2\/pages#wpcf7-f34-o1\" method=\"post\" class=\"wpcf7-form init\" aria-label=\"Formulario de contacto\" novalidate=\"novalidate\" data-status=\"init\">\n<fieldset class=\"hidden-fields-container\"><input type=\"hidden\" name=\"_wpcf7\" value=\"34\" \/><input type=\"hidden\" name=\"_wpcf7_version\" value=\"6.1.2\" \/><input type=\"hidden\" name=\"_wpcf7_locale\" value=\"es_ES\" \/><input type=\"hidden\" name=\"_wpcf7_unit_tag\" value=\"wpcf7-f34-o1\" \/><input type=\"hidden\" name=\"_wpcf7_container_post\" value=\"0\" \/><input type=\"hidden\" name=\"_wpcf7_posted_data_hash\" value=\"\" \/>\n<\/fieldset>\n<p><span class=\"wpcf7-form-control-wrap\" data-name=\"nombre\"><input size=\"40\" maxlength=\"400\" class=\"wpcf7-form-control wpcf7-text wpcf7-validates-as-required\" aria-required=\"true\" aria-invalid=\"false\" placeholder=\"Nombre*\" value=\"\" type=\"text\" name=\"nombre\" \/><\/span>\n<\/p>\n<p><span class=\"wpcf7-form-control-wrap\" data-name=\"email\"><input size=\"40\" maxlength=\"400\" class=\"wpcf7-form-control wpcf7-email wpcf7-validates-as-required wpcf7-text wpcf7-validates-as-email\" aria-required=\"true\" aria-invalid=\"false\" placeholder=\"Email*\" value=\"\" type=\"email\" name=\"email\" \/><\/span>\n<\/p>\n<p><span class=\"wpcf7-form-control-wrap\" data-name=\"telefono\"><input size=\"40\" maxlength=\"400\" class=\"wpcf7-form-control wpcf7-text\" aria-invalid=\"false\" placeholder=\"Tel\u00e9fono\" value=\"\" type=\"text\" name=\"telefono\" \/><\/span>\n<\/p>\n<p><span class=\"wpcf7-form-control-wrap\" data-name=\"mensaje\"><textarea cols=\"40\" rows=\"10\" maxlength=\"2000\" class=\"wpcf7-form-control wpcf7-textarea\" aria-invalid=\"false\" placeholder=\"Mensaje*\" name=\"mensaje\"><\/textarea><\/span>\n<\/p>\n<p><input class=\"wpcf7-form-control wpcf7-submit has-spinner\" type=\"submit\" value=\"enviar\" \/>\n<\/p><div class=\"wpcf7-response-output\" aria-hidden=\"true\"><\/div>\n<\/form>\n<\/div>\n\n<\/p><\/div>\n<\/p>\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<p>Tambi\u00e9n puedes visitarnos en Sevilla, concertando una cita por tel\u00e9fono antes: +34 695 512 623<\/p>\n<\/p>\n<p>\n<iframe loading=\"lazy\" src=\"https:\/\/www.google.com\/maps\/embed?pb=!1m18!1m12!1m3!1d3169.5310241945526!2d-5.994299184236135!3d37.40092167982931!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0xd126c0791488411%3A0xbe433a5bde2b9bd2!2sMAD+Africa!5e0!3m2!1ses!2ses!4v1542199480320\" style=\"border:0\" allowfullscreen=\"\" width=\"100%\" height=\"450\" frameborder=\"0\"><\/iframe>\n<\/div>\n<\/div><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Nos encanta atenderte. Por favor, rellena correctamente los campos de abajo si quieres contactarnos. Tambi\u00e9n puedes visitarnos en Sevilla, concertando una cita por tel\u00e9fono antes: +34 695 512 623<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-19","page","type-page","status-publish","hentry"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v26.1.1 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\r\n<title>UI Components - PENKODE - WP Headless Theme<\/title>\r\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\r\n<link rel=\"canonical\" href=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:locale\" content=\"es_ES\" \/>\r\n<meta property=\"og:type\" content=\"article\" \/>\r\n<meta property=\"og:title\" content=\"UI Components - PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"og:description\" content=\"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]\" \/>\r\n<meta property=\"og:url\" content=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:site_name\" content=\"PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"article:modified_time\" content=\"2025-10-09T10:20:21+00:00\" \/>\r\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\r\n<meta name=\"twitter:label1\" content=\"Tiempo de lectura\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutos\" \/>\r\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"url\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"name\":\"UI Components - PENKODE - WP Headless Theme\",\"isPartOf\":{\"@id\":\"http:\/\/penkode-headless.local\/#website\"},\"datePublished\":\"2025-10-05T06:26:57+00:00\",\"dateModified\":\"2025-10-09T10:20:21+00:00\",\"breadcrumb\":{\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\"},\"inLanguage\":\"es\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"http:\/\/penkode-headless.local\/ui-components\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"http:\/\/penkode-headless.local\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"UI Components\"}]},{\"@type\":\"WebSite\",\"@id\":\"http:\/\/penkode-headless.local\/#website\",\"url\":\"http:\/\/penkode-headless.local\/\",\"name\":\"PENKODE - WP Headless Theme\",\"description\":\"Headless WP theme framework for Next.js\/React\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"http:\/\/penkode-headless.local\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"es\"}]}<\/script>\r\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"UI Components - PENKODE - WP Headless Theme","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"http:\/\/penkode-headless.local\/ui-components\/","og_locale":"es_ES","og_type":"article","og_title":"UI Components - PENKODE - WP Headless Theme","og_description":"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]","og_url":"http:\/\/penkode-headless.local\/ui-components\/","og_site_name":"PENKODE - WP Headless Theme","article_modified_time":"2025-10-09T10:20:21+00:00","twitter_card":"summary_large_image","twitter_misc":{"Tiempo de lectura":"3 minutos"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"http:\/\/penkode-headless.local\/ui-components\/","url":"http:\/\/penkode-headless.local\/ui-components\/","name":"UI Components - PENKODE - WP Headless Theme","isPartOf":{"@id":"http:\/\/penkode-headless.local\/#website"},"datePublished":"2025-10-05T06:26:57+00:00","dateModified":"2025-10-09T10:20:21+00:00","breadcrumb":{"@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb"},"inLanguage":"es","potentialAction":[{"@type":"ReadAction","target":["http:\/\/penkode-headless.local\/ui-components\/"]}]},{"@type":"BreadcrumbList","@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"http:\/\/penkode-headless.local\/"},{"@type":"ListItem","position":2,"name":"UI Components"}]},{"@type":"WebSite","@id":"http:\/\/penkode-headless.local\/#website","url":"http:\/\/penkode-headless.local\/","name":"PENKODE - WP Headless Theme","description":"Headless WP theme framework for Next.js\/React","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"http:\/\/penkode-headless.local\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"es"}]}},"_links":{"self":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/19","targetHints":{"allow":["GET"]}}],"collection":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/comments?post=19"}],"version-history":[{"count":9,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/19\/revisions"}],"predecessor-version":[{"id":182,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/19\/revisions\/182"}],"wp:attachment":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/media?parent=19"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}},{"id":17,"date":"2025-09-11T12:46:39","date_gmt":"2025-09-11T10:46:39","guid":{"rendered":"http:\/\/penkode-headless.local\/?page_id=17"},"modified":"2025-10-14T12:18:47","modified_gmt":"2025-10-14T10:18:47","slug":"participa","status":"publish","type":"page","link":"http:\/\/penkode-headless.local\/participa\/","title":{"rendered":"Participa"},"content":{"rendered":"<\/p>\n<p>Este portal est\u00e1 vivo y se construye de manera colectiva. Creemos que el conocimiento y la pr\u00e1ctica se enriquecen cuando se comparten. Por eso, te invitamos a ser parte de esta red de docentes y personas comprometidas con la educaci\u00f3n antirracista:<\/p>\n<\/p>\n<ol class=\"wp-block-list\">\n<li><strong>Comparte recursos<\/strong> Ayuda a m\u00e1s docentes ingresando recursos de calidad que puedan inspirar y transformar: libros, art\u00edculos, gu\u00edas, v\u00eddeos o juegos. Solo te llevar\u00e1 10-15 minutos y tu aporte har\u00e1 que la educaci\u00f3n sea m\u00e1s inclusiva y transformadora. S\u00fabelos a trav\u00e9s de nuestro <a href=\"https:\/\/docs.google.com\/forms\/d\/185AJ4Jl86Z6tyrOxukqlo2Cgp0bro8RcMfaXr23Am2k\/preview\" target=\"_blank\" rel=\"noreferrer noopener\">formulario online<\/a><\/li>\n<\/p>\n<li><strong>\u00danete a la red<\/strong> Forma parte del grupo de WhatsApp de la Red \u201cRepensando la Educaci\u00f3n desde el Antirracismo\u201d, donde compartimos ideas, experiencias y noticias.<\/li>\n<\/p>\n<li><strong>Deja tu rese\u00f1a:<\/strong> Comenta sobre los recursos: cu\u00e9ntanos si lo has usado, c\u00f3mo te ha servido y qu\u00e9 impacto tuvo. Tus aportes ayudan a la comunidad educativa global.<\/li>\n<\/p>\n<li><strong>Colabora con MAD \u00c1frica<\/strong> Si quieres implicarte m\u00e1s de cerca, escr\u00edbenos a <a href=\"mailto:madafrica@madafrica.es\">madafrica@madafrica.es<\/a>. Siempre buscamos alianzas y manos amigas para seguir transformando la educaci\u00f3n.<\/li>\n<\/ol>\n<\/p>\n<div class=\"wp-block-group alignfull is-content-justification-center\" style=\"margin-top:0;margin-bottom:0\">\n<div class=\"wp-block-group__inner-container is-layout-constrained wp-block-group-is-layout-constrained\">\n<div style=\"height:var(--wp--preset--spacing--20)\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/p>\n<div style=\"height:100px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/p>\n<div class=\"wp-block-group alignwide\">\n<div class=\"wp-block-group__inner-container is-layout-flow wp-block-group-is-layout-flow\">\n<div class=\"wp-block-columns alignwide are-vertically-aligned-top is-layout-flex wp-container-core-columns-is-layout-ac3ebc3b wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-vertically-aligned-top is-content-justification-left is-layout-constrained wp-container-core-column-is-layout-02d07192 wp-block-column-is-layout-constrained\">\n<h1 class=\"wp-block-heading\">Descubre un reino de oportunidades.<\/h1>\n<\/div>\n<\/p>\n<div class=\"wp-block-column is-vertically-aligned-top is-layout-flow wp-block-column-is-layout-flow\" style=\"flex-basis:40%\">\n<p>Explorando el complejo tapiz de la vida, las opciones revelan rutas hacia lo excepcional, requiriendo innovaci\u00f3n, curiosidad y valent\u00eda para un viaje profundamente satisfactorio.<\/p>\n<\/p>\n<div class=\"wp-block-buttons is-layout-flex wp-block-buttons-is-layout-flex\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Empezar<\/a><\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/p>\n<div style=\"height:var(--wp--preset--spacing--20)\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/p>\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" src=\"https:\/\/pd.w.org\/2023\/07\/44364b18862589f06.53436652.jpg\" alt=\"\" style=\"aspect-ratio:16\/9;object-fit:cover\"\/><\/figure>\n<\/div>\n<\/div>\n<\/p>\n<div style=\"height:var(--wp--preset--spacing--20)\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Este portal est\u00e1 vivo y se construye de manera colectiva. Creemos que el conocimiento y la pr\u00e1ctica se enriquecen cuando se comparten. Por eso, te invitamos a ser parte de esta red de docentes y personas comprometidas con la educaci\u00f3n antirracista: Descubre un reino de oportunidades. Explorando el complejo tapiz de la vida, las opciones [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-17","page","type-page","status-publish","hentry"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v26.1.1 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\r\n<title>UI Components - PENKODE - WP Headless Theme<\/title>\r\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\r\n<link rel=\"canonical\" href=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:locale\" content=\"es_ES\" \/>\r\n<meta property=\"og:type\" content=\"article\" \/>\r\n<meta property=\"og:title\" content=\"UI Components - PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"og:description\" content=\"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]\" \/>\r\n<meta property=\"og:url\" content=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:site_name\" content=\"PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"article:modified_time\" content=\"2025-10-09T10:20:21+00:00\" \/>\r\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\r\n<meta name=\"twitter:label1\" content=\"Tiempo de lectura\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutos\" \/>\r\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"url\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"name\":\"UI Components - PENKODE - WP Headless Theme\",\"isPartOf\":{\"@id\":\"http:\/\/penkode-headless.local\/#website\"},\"datePublished\":\"2025-10-05T06:26:57+00:00\",\"dateModified\":\"2025-10-09T10:20:21+00:00\",\"breadcrumb\":{\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\"},\"inLanguage\":\"es\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"http:\/\/penkode-headless.local\/ui-components\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"http:\/\/penkode-headless.local\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"UI Components\"}]},{\"@type\":\"WebSite\",\"@id\":\"http:\/\/penkode-headless.local\/#website\",\"url\":\"http:\/\/penkode-headless.local\/\",\"name\":\"PENKODE - WP Headless Theme\",\"description\":\"Headless WP theme framework for Next.js\/React\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"http:\/\/penkode-headless.local\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"es\"}]}<\/script>\r\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"UI Components - PENKODE - WP Headless Theme","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"http:\/\/penkode-headless.local\/ui-components\/","og_locale":"es_ES","og_type":"article","og_title":"UI Components - PENKODE - WP Headless Theme","og_description":"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]","og_url":"http:\/\/penkode-headless.local\/ui-components\/","og_site_name":"PENKODE - WP Headless Theme","article_modified_time":"2025-10-09T10:20:21+00:00","twitter_card":"summary_large_image","twitter_misc":{"Tiempo de lectura":"3 minutos"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"http:\/\/penkode-headless.local\/ui-components\/","url":"http:\/\/penkode-headless.local\/ui-components\/","name":"UI Components - PENKODE - WP Headless Theme","isPartOf":{"@id":"http:\/\/penkode-headless.local\/#website"},"datePublished":"2025-10-05T06:26:57+00:00","dateModified":"2025-10-09T10:20:21+00:00","breadcrumb":{"@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb"},"inLanguage":"es","potentialAction":[{"@type":"ReadAction","target":["http:\/\/penkode-headless.local\/ui-components\/"]}]},{"@type":"BreadcrumbList","@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"http:\/\/penkode-headless.local\/"},{"@type":"ListItem","position":2,"name":"UI Components"}]},{"@type":"WebSite","@id":"http:\/\/penkode-headless.local\/#website","url":"http:\/\/penkode-headless.local\/","name":"PENKODE - WP Headless Theme","description":"Headless WP theme framework for Next.js\/React","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"http:\/\/penkode-headless.local\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"es"}]}},"_links":{"self":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/17","targetHints":{"allow":["GET"]}}],"collection":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/comments?post=17"}],"version-history":[{"count":11,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/17\/revisions"}],"predecessor-version":[{"id":371,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/17\/revisions\/371"}],"wp:attachment":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/media?parent=17"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}},{"id":13,"date":"2025-09-11T12:45:40","date_gmt":"2025-09-11T10:45:40","guid":{"rendered":"http:\/\/penkode-headless.local\/?page_id=13"},"modified":"2025-09-12T05:48:27","modified_gmt":"2025-09-12T03:48:27","slug":"sobre-xamle","status":"publish","type":"page","link":"http:\/\/penkode-headless.local\/sobre-xamle\/","title":{"rendered":"Sobre Xamle"},"content":{"rendered":"<\/p>\n<h1 class=\"wp-block-heading\">Qu\u00e9 significa Xamle<\/h1>\n<\/p>\n<p><strong>Xamle<\/strong> es una palabra en <a href=\"https:\/\/es.wikipedia.org\/wiki\/W%C3%B3lof\" target=\"_blank\" rel=\"noreferrer noopener\">W\u00f3lof<\/a> (lengua hablada en Senegal, Gambia y Mauritania) que significa ense\u00f1ar, explicar o hacer visible. Hemos elegido este t\u00e9rmino porque refleja la esencia de este espacio: dar luz a recursos valiosos que muchas veces no llegan a las comunidades educativas y ofrecer herramientas para cuestionar sesgos, ampliar miradas y visibilizar la diversidad en la educaci\u00f3n.<\/p>\n<\/p>\n<p>El Portal Xamle nace con un objetivo claro: facilitar al profesorado el acceso a recursos antirracistas, organizados de forma clara, \u00fatil y contextualizada, que contribuyan tanto a la reflexi\u00f3n personal como a la transformaci\u00f3n de la pr\u00e1ctica docente.<\/p>\n<\/p>\n<div style=\"height:45px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/p>\n<p>En Xamle encontrar\u00e1s dos grandes tipos de materiales:<\/p>\n<\/p>\n<h3 class=\"wp-block-heading\">1_Recursos para la Reflexi\u00f3n y Formaci\u00f3n Personal<\/h3>\n<\/p>\n<figure class=\"wp-block-image alignleft size-medium\"><img loading=\"lazy\" decoding=\"async\" width=\"300\" height=\"205\" src=\"http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/formacion-xamle-01-300x205.jpg\" alt=\"\" class=\"wp-image-61\" srcset=\"http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/formacion-xamle-01-300x205.jpg 300w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/formacion-xamle-01-1024x699.jpg 1024w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/formacion-xamle-01-768x524.jpg 768w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/formacion-xamle-01-1536x1048.jpg 1536w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/formacion-xamle-01.jpg 1920w\" sizes=\"auto, (max-width: 300px) 100vw, 300px\" \/><\/figure>\n<\/p>\n<div class=\"wp-block-group is-content-justification-left is-nowrap is-layout-flex wp-container-core-group-is-layout-c6736c52 wp-block-group-is-layout-flex\">\n<p>Materiales para profundizar en la comprensi\u00f3n del racismo, sus manifestaciones y c\u00f3mo abordarlo desde la educaci\u00f3n. Incluyen libros, art\u00edculos, documentales, gu\u00edas, cursos y glosarios que fortalecen tu mirada cr\u00edtica y ampl\u00edan tus capacidades como docente.<\/p>\n<\/div>\n<\/p>\n<div style=\"height:64px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/p>\n<h3 class=\"wp-block-heading\">2_Recursos para la Implementaci\u00f3n en el Aula<\/h3>\n<\/p>\n<figure class=\"wp-block-image alignleft size-medium\"><img loading=\"lazy\" decoding=\"async\" width=\"300\" height=\"200\" src=\"http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/aula-xamle-01-300x200.jpg\" alt=\"\" class=\"wp-image-58\" srcset=\"http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/aula-xamle-01-300x200.jpg 300w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/aula-xamle-01-1024x682.jpg 1024w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/aula-xamle-01-768x511.jpg 768w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/aula-xamle-01-1536x1022.jpg 1536w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/aula-xamle-01.jpg 1920w\" sizes=\"auto, (max-width: 300px) 100vw, 300px\" \/><\/figure>\n<\/p>\n<\/p>\n<p>Herramientas pr\u00e1cticas que, adem\u00e1s de actividades para el alumnado, ofrecen gu\u00edas y orientaciones para el profesorado, de modo que siempre van acompa\u00f1adas de reflexi\u00f3n. Aqu\u00ed encontrar\u00e1s propuestas did\u00e1cticas, situaciones de aprendizaje, cuentos, din\u00e1micas, materiales visuales y audiovisuales para favorecer una educaci\u00f3n inclusiva y antirracista en el d\u00eda a d\u00eda escolar. <\/p><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Qu\u00e9 significa Xamle Xamle es una palabra en W\u00f3lof (lengua hablada en Senegal, Gambia y Mauritania) que significa ense\u00f1ar, explicar o hacer visible. Hemos elegido este t\u00e9rmino porque refleja la esencia de este espacio: dar luz a recursos valiosos que muchas veces no llegan a las comunidades educativas y ofrecer herramientas para cuestionar sesgos, ampliar [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-13","page","type-page","status-publish","hentry"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v26.1.1 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\r\n<title>UI Components - PENKODE - WP Headless Theme<\/title>\r\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\r\n<link rel=\"canonical\" href=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:locale\" content=\"es_ES\" \/>\r\n<meta property=\"og:type\" content=\"article\" \/>\r\n<meta property=\"og:title\" content=\"UI Components - PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"og:description\" content=\"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]\" \/>\r\n<meta property=\"og:url\" content=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:site_name\" content=\"PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"article:modified_time\" content=\"2025-10-09T10:20:21+00:00\" \/>\r\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\r\n<meta name=\"twitter:label1\" content=\"Tiempo de lectura\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutos\" \/>\r\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"url\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"name\":\"UI Components - PENKODE - WP Headless Theme\",\"isPartOf\":{\"@id\":\"http:\/\/penkode-headless.local\/#website\"},\"datePublished\":\"2025-10-05T06:26:57+00:00\",\"dateModified\":\"2025-10-09T10:20:21+00:00\",\"breadcrumb\":{\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\"},\"inLanguage\":\"es\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"http:\/\/penkode-headless.local\/ui-components\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"http:\/\/penkode-headless.local\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"UI Components\"}]},{\"@type\":\"WebSite\",\"@id\":\"http:\/\/penkode-headless.local\/#website\",\"url\":\"http:\/\/penkode-headless.local\/\",\"name\":\"PENKODE - WP Headless Theme\",\"description\":\"Headless WP theme framework for Next.js\/React\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"http:\/\/penkode-headless.local\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"es\"}]}<\/script>\r\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"UI Components - PENKODE - WP Headless Theme","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"http:\/\/penkode-headless.local\/ui-components\/","og_locale":"es_ES","og_type":"article","og_title":"UI Components - PENKODE - WP Headless Theme","og_description":"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]","og_url":"http:\/\/penkode-headless.local\/ui-components\/","og_site_name":"PENKODE - WP Headless Theme","article_modified_time":"2025-10-09T10:20:21+00:00","twitter_card":"summary_large_image","twitter_misc":{"Tiempo de lectura":"3 minutos"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"http:\/\/penkode-headless.local\/ui-components\/","url":"http:\/\/penkode-headless.local\/ui-components\/","name":"UI Components - PENKODE - WP Headless Theme","isPartOf":{"@id":"http:\/\/penkode-headless.local\/#website"},"datePublished":"2025-10-05T06:26:57+00:00","dateModified":"2025-10-09T10:20:21+00:00","breadcrumb":{"@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb"},"inLanguage":"es","potentialAction":[{"@type":"ReadAction","target":["http:\/\/penkode-headless.local\/ui-components\/"]}]},{"@type":"BreadcrumbList","@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"http:\/\/penkode-headless.local\/"},{"@type":"ListItem","position":2,"name":"UI Components"}]},{"@type":"WebSite","@id":"http:\/\/penkode-headless.local\/#website","url":"http:\/\/penkode-headless.local\/","name":"PENKODE - WP Headless Theme","description":"Headless WP theme framework for Next.js\/React","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"http:\/\/penkode-headless.local\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"es"}]}},"_links":{"self":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/13","targetHints":{"allow":["GET"]}}],"collection":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/comments?post=13"}],"version-history":[{"count":27,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/13\/revisions"}],"predecessor-version":[{"id":77,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/13\/revisions\/77"}],"wp:attachment":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/media?parent=13"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}},{"id":11,"date":"2025-09-11T12:45:12","date_gmt":"2025-09-11T10:45:12","guid":{"rendered":"http:\/\/penkode-headless.local\/?page_id=11"},"modified":"2025-09-13T07:03:13","modified_gmt":"2025-09-13T05:03:13","slug":"quienes-somos","status":"publish","type":"page","link":"http:\/\/penkode-headless.local\/quienes-somos\/","title":{"rendered":"Quienes somos"},"content":{"rendered":"<\/p>\n<p>Esta web es una iniciativa de <strong>MAD \u00c1frica<\/strong>, con la financiaci\u00f3n de la <strong>Agencia Andaluza de Cooperaci\u00f3n Internacional para el Desarrollo<\/strong> (<a href=\"https:\/\/www.juntadeandalucia.es\/organismos\/aacid.html\" target=\"_blank\" rel=\"noreferrer noopener\">AACID<\/a>) y el apoyo de la Red \u201cRepensando la Educaci\u00f3n desde el Antirracismo\u201d, creada en el marco del proyecto \u201cComunidad Educativa comprometida con las identidades culturales diversas y los derechos de las infancias y adolescencias racializadas en el marco de la Agenda 2030\u201d.<\/p>\n<\/p>\n<p>MAD \u00c1frica es una ONGD con sede en Sevilla, en el sur de Europa, que trabaja por una sociedad inclusiva, antirracista, justa y ecofeminista. Junto a comunidades afroandaluzas, africanas y migrantes, impulsamos procesos educativos emancipadores, de comunicaci\u00f3n transformadora e incidencia pol\u00edtica para fortalecer la ciudadan\u00eda y la justicia social.<\/p>\n<\/p>\n<p>Creemos que para comprender y transformar la realidad es necesario cuestionar nuestras formas de pensar y habitar el mundo, deconstruyendo patrones coloniales y relaciones de poder que vulneran los derechos de las personas racializadas y de los pueblos del Sur global. En este camino, la educaci\u00f3n ocupa un lugar central.<\/p>\n<\/p>\n<p>Trabajamos con docentes, comunidades educativas y juventudes, convencidas de que el aula es un espacio clave para sembrar cambios duraderos hacia la igualdad y la justicia social. A trav\u00e9s de la educaci\u00f3n transformadora y en alianza con numerosas personas, colectivos y universidades, fomentamos el pensamiento cr\u00edtico y la conciencia social frente a las desigualdades.<\/p>\n<\/p>\n<div style=\"height:47px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/p>\n<div class=\"wp-block-columns is-layout-flex wp-container-core-columns-is-layout-9d6595d7 wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-vertically-aligned-center is-layout-flow wp-block-column-is-layout-flow\">\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"682\" src=\"http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/aula-xamle-01-1024x682.jpg\" alt=\"\" class=\"wp-image-58\" srcset=\"http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/aula-xamle-01-1024x682.jpg 1024w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/aula-xamle-01-300x200.jpg 300w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/aula-xamle-01-768x511.jpg 768w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/aula-xamle-01-1536x1022.jpg 1536w, http:\/\/penkode-headless.local\/wp-content\/uploads\/2025\/09\/aula-xamle-01.jpg 1920w\" sizes=\"auto, (max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n<\/div>\n<\/p>\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<blockquote class=\"wp-block-quote is-layout-flow wp-block-quote-is-layout-flow\">\n<p>Creemos que para comprender y transformar la realidad es necesario cuestionar nuestras formas de pensar y habitar el mundo, deconstruyendo patrones coloniales y relaciones de poder que vulneran los derechos de las personas racializadas y de los pueblos del Sur global.<\/p>\n<\/p>\n<\/blockquote>\n<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Esta web es una iniciativa de MAD \u00c1frica, con la financiaci\u00f3n de la Agencia Andaluza de Cooperaci\u00f3n Internacional para el Desarrollo (AACID) y el apoyo de la Red \u201cRepensando la Educaci\u00f3n desde el Antirracismo\u201d, creada en el marco del proyecto \u201cComunidad Educativa comprometida con las identidades culturales diversas y los derechos de las infancias y [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-11","page","type-page","status-publish","hentry"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v26.1.1 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\r\n<title>UI Components - PENKODE - WP Headless Theme<\/title>\r\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\r\n<link rel=\"canonical\" href=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:locale\" content=\"es_ES\" \/>\r\n<meta property=\"og:type\" content=\"article\" \/>\r\n<meta property=\"og:title\" content=\"UI Components - PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"og:description\" content=\"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]\" \/>\r\n<meta property=\"og:url\" content=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:site_name\" content=\"PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"article:modified_time\" content=\"2025-10-09T10:20:21+00:00\" \/>\r\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\r\n<meta name=\"twitter:label1\" content=\"Tiempo de lectura\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutos\" \/>\r\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"url\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"name\":\"UI Components - PENKODE - WP Headless Theme\",\"isPartOf\":{\"@id\":\"http:\/\/penkode-headless.local\/#website\"},\"datePublished\":\"2025-10-05T06:26:57+00:00\",\"dateModified\":\"2025-10-09T10:20:21+00:00\",\"breadcrumb\":{\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\"},\"inLanguage\":\"es\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"http:\/\/penkode-headless.local\/ui-components\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"http:\/\/penkode-headless.local\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"UI Components\"}]},{\"@type\":\"WebSite\",\"@id\":\"http:\/\/penkode-headless.local\/#website\",\"url\":\"http:\/\/penkode-headless.local\/\",\"name\":\"PENKODE - WP Headless Theme\",\"description\":\"Headless WP theme framework for Next.js\/React\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"http:\/\/penkode-headless.local\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"es\"}]}<\/script>\r\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"UI Components - PENKODE - WP Headless Theme","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"http:\/\/penkode-headless.local\/ui-components\/","og_locale":"es_ES","og_type":"article","og_title":"UI Components - PENKODE - WP Headless Theme","og_description":"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]","og_url":"http:\/\/penkode-headless.local\/ui-components\/","og_site_name":"PENKODE - WP Headless Theme","article_modified_time":"2025-10-09T10:20:21+00:00","twitter_card":"summary_large_image","twitter_misc":{"Tiempo de lectura":"3 minutos"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"http:\/\/penkode-headless.local\/ui-components\/","url":"http:\/\/penkode-headless.local\/ui-components\/","name":"UI Components - PENKODE - WP Headless Theme","isPartOf":{"@id":"http:\/\/penkode-headless.local\/#website"},"datePublished":"2025-10-05T06:26:57+00:00","dateModified":"2025-10-09T10:20:21+00:00","breadcrumb":{"@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb"},"inLanguage":"es","potentialAction":[{"@type":"ReadAction","target":["http:\/\/penkode-headless.local\/ui-components\/"]}]},{"@type":"BreadcrumbList","@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"http:\/\/penkode-headless.local\/"},{"@type":"ListItem","position":2,"name":"UI Components"}]},{"@type":"WebSite","@id":"http:\/\/penkode-headless.local\/#website","url":"http:\/\/penkode-headless.local\/","name":"PENKODE - WP Headless Theme","description":"Headless WP theme framework for Next.js\/React","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"http:\/\/penkode-headless.local\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"es"}]}},"_links":{"self":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/11","targetHints":{"allow":["GET"]}}],"collection":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/comments?post=11"}],"version-history":[{"count":8,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/11\/revisions"}],"predecessor-version":[{"id":136,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/11\/revisions\/136"}],"wp:attachment":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/media?parent=11"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}},{"id":9,"date":"2025-09-11T12:43:51","date_gmt":"2025-09-11T10:43:51","guid":{"rendered":"http:\/\/penkode-headless.local\/?page_id=9"},"modified":"2025-09-11T12:43:51","modified_gmt":"2025-09-11T10:43:51","slug":"login","status":"publish","type":"page","link":"http:\/\/penkode-headless.local\/login\/","title":{"rendered":"Login"},"content":{"rendered":"","protected":false},"excerpt":{"rendered":"","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"login.php","meta":{"footnotes":""},"class_list":["post-9","page","type-page","status-publish","hentry"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v26.1.1 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\r\n<title>UI Components - PENKODE - WP Headless Theme<\/title>\r\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\r\n<link rel=\"canonical\" href=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:locale\" content=\"es_ES\" \/>\r\n<meta property=\"og:type\" content=\"article\" \/>\r\n<meta property=\"og:title\" content=\"UI Components - PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"og:description\" content=\"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]\" \/>\r\n<meta property=\"og:url\" content=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:site_name\" content=\"PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"article:modified_time\" content=\"2025-10-09T10:20:21+00:00\" \/>\r\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\r\n<meta name=\"twitter:label1\" content=\"Tiempo de lectura\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutos\" \/>\r\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"url\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"name\":\"UI Components - PENKODE - WP Headless Theme\",\"isPartOf\":{\"@id\":\"http:\/\/penkode-headless.local\/#website\"},\"datePublished\":\"2025-10-05T06:26:57+00:00\",\"dateModified\":\"2025-10-09T10:20:21+00:00\",\"breadcrumb\":{\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\"},\"inLanguage\":\"es\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"http:\/\/penkode-headless.local\/ui-components\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"http:\/\/penkode-headless.local\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"UI Components\"}]},{\"@type\":\"WebSite\",\"@id\":\"http:\/\/penkode-headless.local\/#website\",\"url\":\"http:\/\/penkode-headless.local\/\",\"name\":\"PENKODE - WP Headless Theme\",\"description\":\"Headless WP theme framework for Next.js\/React\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"http:\/\/penkode-headless.local\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"es\"}]}<\/script>\r\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"UI Components - PENKODE - WP Headless Theme","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"http:\/\/penkode-headless.local\/ui-components\/","og_locale":"es_ES","og_type":"article","og_title":"UI Components - PENKODE - WP Headless Theme","og_description":"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]","og_url":"http:\/\/penkode-headless.local\/ui-components\/","og_site_name":"PENKODE - WP Headless Theme","article_modified_time":"2025-10-09T10:20:21+00:00","twitter_card":"summary_large_image","twitter_misc":{"Tiempo de lectura":"3 minutos"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"http:\/\/penkode-headless.local\/ui-components\/","url":"http:\/\/penkode-headless.local\/ui-components\/","name":"UI Components - PENKODE - WP Headless Theme","isPartOf":{"@id":"http:\/\/penkode-headless.local\/#website"},"datePublished":"2025-10-05T06:26:57+00:00","dateModified":"2025-10-09T10:20:21+00:00","breadcrumb":{"@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb"},"inLanguage":"es","potentialAction":[{"@type":"ReadAction","target":["http:\/\/penkode-headless.local\/ui-components\/"]}]},{"@type":"BreadcrumbList","@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"http:\/\/penkode-headless.local\/"},{"@type":"ListItem","position":2,"name":"UI Components"}]},{"@type":"WebSite","@id":"http:\/\/penkode-headless.local\/#website","url":"http:\/\/penkode-headless.local\/","name":"PENKODE - WP Headless Theme","description":"Headless WP theme framework for Next.js\/React","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"http:\/\/penkode-headless.local\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"es"}]}},"_links":{"self":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/9","targetHints":{"allow":["GET"]}}],"collection":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/comments?post=9"}],"version-history":[{"count":1,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/9\/revisions"}],"predecessor-version":[{"id":10,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/9\/revisions\/10"}],"wp:attachment":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/media?parent=9"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}},{"id":3,"date":"2025-09-10T12:59:42","date_gmt":"2025-09-10T12:59:42","guid":{"rendered":"http:\/\/penkode-headless.local\/?page_id=3"},"modified":"2025-09-12T06:58:23","modified_gmt":"2025-09-12T04:58:23","slug":"politica-de-privacidad","status":"publish","type":"page","link":"http:\/\/penkode-headless.local\/politica-de-privacidad\/","title":{"rendered":"Pol\u00edtica de Privacidad"},"content":{"rendered":"<\/p>\n<h2 class=\"wp-block-heading\">Who we are<\/h2>\n<p>\n<\/p>\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: <\/strong>Our website address is: http:\/\/penkode-headless.local.<\/p>\n<p>\n<\/p>\n<h2 class=\"wp-block-heading\">Comments<\/h2>\n<p>\n<\/p>\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: <\/strong>When visitors leave comments on the site we collect the data shown in the comments form, and also the visitor&#8217;s IP address and browser user agent string to help spam detection.<\/p>\n<p>\n<\/p>\n<p>An anonymized string created from your email address (also called a hash) may be provided to the Gravatar service to see if you are using it. The Gravatar service privacy policy is available here: https:\/\/automattic.com\/privacy\/. After approval of your comment, your profile picture is visible to the public in the context of your comment.<\/p>\n<p>\n<\/p>\n<h2 class=\"wp-block-heading\">Media<\/h2>\n<p>\n<\/p>\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: <\/strong>If you upload images to the website, you should avoid uploading images with embedded location data (EXIF GPS) included. Visitors to the website can download and extract any location data from images on the website.<\/p>\n<p>\n<\/p>\n<h2 class=\"wp-block-heading\">Cookies<\/h2>\n<p>\n<\/p>\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: <\/strong>If you leave a comment on our site you may opt-in to saving your name, email address and website in cookies. These are for your convenience so that you do not have to fill in your details again when you leave another comment. These cookies will last for one year.<\/p>\n<p>\n<\/p>\n<p>If you visit our login page, we will set a temporary cookie to determine if your browser accepts cookies. This cookie contains no personal data and is discarded when you close your browser.<\/p>\n<p>\n<\/p>\n<p>When you log in, we will also set up several cookies to save your login information and your screen display choices. Login cookies last for two days, and screen options cookies last for a year. If you select &quot;Remember Me&quot;, your login will persist for two weeks. If you log out of your account, the login cookies will be removed.<\/p>\n<p>\n<\/p>\n<p>If you edit or publish an article, an additional cookie will be saved in your browser. This cookie includes no personal data and simply indicates the post ID of the article you just edited. It expires after 1 day.<\/p>\n<p>\n<\/p>\n<h2 class=\"wp-block-heading\">Embedded content from other websites<\/h2>\n<p>\n<\/p>\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: <\/strong>Articles on this site may include embedded content (e.g. videos, images, articles, etc.). Embedded content from other websites behaves in the exact same way as if the visitor has visited the other website.<\/p>\n<p>\n<\/p>\n<p>These websites may collect data about you, use cookies, embed additional third-party tracking, and monitor your interaction with that embedded content, including tracking your interaction with the embedded content if you have an account and are logged in to that website.<\/p>\n<p>\n<\/p>\n<h2 class=\"wp-block-heading\">Who we share your data with<\/h2>\n<p>\n<\/p>\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: <\/strong>If you request a password reset, your IP address will be included in the reset email.<\/p>\n<p>\n<\/p>\n<h2 class=\"wp-block-heading\">How long we retain your data<\/h2>\n<p>\n<\/p>\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: <\/strong>If you leave a comment, the comment and its metadata are retained indefinitely. This is so we can recognize and approve any follow-up comments automatically instead of holding them in a moderation queue.<\/p>\n<p>\n<\/p>\n<p>For users that register on our website (if any), we also store the personal information they provide in their user profile. All users can see, edit, or delete their personal information at any time (except they cannot change their username). Website administrators can also see and edit that information.<\/p>\n<p>\n<\/p>\n<h2 class=\"wp-block-heading\">What rights you have over your data<\/h2>\n<p>\n<\/p>\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: <\/strong>If you have an account on this site, or have left comments, you can request to receive an exported file of the personal data we hold about you, including any data you have provided to us. You can also request that we erase any personal data we hold about you. This does not include any data we are obliged to keep for administrative, legal, or security purposes.<\/p>\n<p>\n<\/p>\n<h2 class=\"wp-block-heading\">Where your data is sent<\/h2>\n<p>\n<\/p>\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: <\/strong>Visitor comments may be checked through an automated spam detection service.<\/p><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Who we are Suggested text: Our website address is: http:\/\/penkode-headless.local. Comments Suggested text: When visitors leave comments on the site we collect the data shown in the comments form, and also the visitor&#8217;s IP address and browser user agent string to help spam detection. An anonymized string created from your email address (also called a [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-3","page","type-page","status-publish","hentry"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v26.1.1 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\r\n<title>UI Components - PENKODE - WP Headless Theme<\/title>\r\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\r\n<link rel=\"canonical\" href=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:locale\" content=\"es_ES\" \/>\r\n<meta property=\"og:type\" content=\"article\" \/>\r\n<meta property=\"og:title\" content=\"UI Components - PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"og:description\" content=\"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]\" \/>\r\n<meta property=\"og:url\" content=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:site_name\" content=\"PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"article:modified_time\" content=\"2025-10-09T10:20:21+00:00\" \/>\r\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\r\n<meta name=\"twitter:label1\" content=\"Tiempo de lectura\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutos\" \/>\r\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"url\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"name\":\"UI Components - PENKODE - WP Headless Theme\",\"isPartOf\":{\"@id\":\"http:\/\/penkode-headless.local\/#website\"},\"datePublished\":\"2025-10-05T06:26:57+00:00\",\"dateModified\":\"2025-10-09T10:20:21+00:00\",\"breadcrumb\":{\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\"},\"inLanguage\":\"es\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"http:\/\/penkode-headless.local\/ui-components\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"http:\/\/penkode-headless.local\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"UI Components\"}]},{\"@type\":\"WebSite\",\"@id\":\"http:\/\/penkode-headless.local\/#website\",\"url\":\"http:\/\/penkode-headless.local\/\",\"name\":\"PENKODE - WP Headless Theme\",\"description\":\"Headless WP theme framework for Next.js\/React\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"http:\/\/penkode-headless.local\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"es\"}]}<\/script>\r\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"UI Components - PENKODE - WP Headless Theme","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"http:\/\/penkode-headless.local\/ui-components\/","og_locale":"es_ES","og_type":"article","og_title":"UI Components - PENKODE - WP Headless Theme","og_description":"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]","og_url":"http:\/\/penkode-headless.local\/ui-components\/","og_site_name":"PENKODE - WP Headless Theme","article_modified_time":"2025-10-09T10:20:21+00:00","twitter_card":"summary_large_image","twitter_misc":{"Tiempo de lectura":"3 minutos"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"http:\/\/penkode-headless.local\/ui-components\/","url":"http:\/\/penkode-headless.local\/ui-components\/","name":"UI Components - PENKODE - WP Headless Theme","isPartOf":{"@id":"http:\/\/penkode-headless.local\/#website"},"datePublished":"2025-10-05T06:26:57+00:00","dateModified":"2025-10-09T10:20:21+00:00","breadcrumb":{"@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb"},"inLanguage":"es","potentialAction":[{"@type":"ReadAction","target":["http:\/\/penkode-headless.local\/ui-components\/"]}]},{"@type":"BreadcrumbList","@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"http:\/\/penkode-headless.local\/"},{"@type":"ListItem","position":2,"name":"UI Components"}]},{"@type":"WebSite","@id":"http:\/\/penkode-headless.local\/#website","url":"http:\/\/penkode-headless.local\/","name":"PENKODE - WP Headless Theme","description":"Headless WP theme framework for Next.js\/React","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"http:\/\/penkode-headless.local\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"es"}]}},"_links":{"self":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/3","targetHints":{"allow":["GET"]}}],"collection":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/comments?post=3"}],"version-history":[{"count":1,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/3\/revisions"}],"predecessor-version":[{"id":79,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/3\/revisions\/79"}],"wp:attachment":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/media?parent=3"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}},{"id":2,"date":"2025-09-10T12:59:42","date_gmt":"2025-09-10T12:59:42","guid":{"rendered":"http:\/\/penkode-headless.local\/?page_id=2"},"modified":"2025-10-14T03:06:11","modified_gmt":"2025-10-14T01:06:11","slug":"inicio","status":"publish","type":"page","link":"http:\/\/penkode-headless.local\/","title":{"rendered":"Inicio"},"content":{"rendered":"<\/p>\n<div style=\"height:83px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/p>\n<h1 class=\"wp-block-heading has-text-align-left\">Penkode Next Headless: WordPress Headless con Next.js<\/h1>\n<\/p>\n<p class=\"has-text-align-left\">Penkode Theme es un tema de WordPress dise\u00f1ado para trabajar en modo <em>headless<\/em>.<br \/>Convierte tu WordPress en un gestor de contenidos moderno y lo conecta con un frontend en <strong>Next.js<\/strong>, sin plugins pesados ni configuraciones complicadas.<\/p>\n<\/p>\n<ul class=\"wp-block-list\">\n<li><strong>Backend estable<\/strong>: usa WordPress como siempre, con men\u00fas, p\u00e1ginas, Custom Post Types y campos personalizados.<\/li>\n<\/p>\n<li><strong>Frontend moderno<\/strong>: Next.js se encarga de mostrar tu web de forma r\u00e1pida, segura y optimizada para SEO.<\/li>\n<\/p>\n<li><strong>Control total del c\u00f3digo<\/strong>: estructura pensada para desarrolladores que quieren escalar proyectos sin depender de soluciones cerradas.<\/li>\n<\/ul>\n<\/p>\n<p>En pocas palabras: un Theme ligero que convierte WordPress en una API y te da la libertad de construir experiencias digitales con React.<\/p>\n<\/p>\n<div style=\"height:81px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/p>\n<div class=\"wp-block-cover has-parallax full-width\">\n<div class=\"wp-block-cover__image-background wp-image-85 has-parallax\" style=\"background-position:50% 50%;background-image:url(https:\/\/penkode.com\/framework\/wp-content\/uploads\/2021\/06\/pauloramalho-0321-2544.jpg)\"><\/div>\n<p><span aria-hidden=\"true\" class=\"wp-block-cover__background has-background-dim\"><\/span><\/p>\n<div class=\"wp-block-cover__inner-container is-layout-flow wp-block-cover-is-layout-flow\">\n<div style=\"height:174px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/p>\n<h1 class=\"wp-block-heading has-text-align-center has-large-font-size\">Full Width Div<\/h1>\n<\/p>\n<p class=\"has-text-align-center\">This CSS class, .full-width, is used to position a &lt;div> element outside of<br \/>the Grid Layout and extend its width to 100% of the viewport width (100vw).<\/p>\n<\/p>\n<div style=\"height:177px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/div>\n<\/div>\n<\/p>\n<div style=\"height:104px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/p>\n<h1 class=\"wp-block-heading\">Shortcode contenido de p\u00e1gina Participa<\/h1>\n<\/p>\n<p><p>Este portal est\u00e1 vivo y se construye de manera colectiva. Creemos que el conocimiento y la pr\u00e1ctica se enriquecen cuando se comparten. Por eso, te invitamos a ser parte de esta red de docentes y personas comprometidas con la educaci\u00f3n antirracista:<\/p>\n<ol class=\"wp-block-list\">\n<li><strong>Comparte recursos<\/strong> Ayuda a m\u00e1s docentes ingresando recursos de calidad que puedan inspirar y transformar: libros, art\u00edculos, gu\u00edas, v\u00eddeos o juegos. Solo te llevar\u00e1 10-15 minutos y tu aporte har\u00e1 que la educaci\u00f3n sea m\u00e1s inclusiva y transformadora. S\u00fabelos a trav\u00e9s de nuestro <a href=\"https:\/\/docs.google.com\/forms\/d\/185AJ4Jl86Z6tyrOxukqlo2Cgp0bro8RcMfaXr23Am2k\/preview\" target=\"_blank\" rel=\"noreferrer noopener\">formulario online<\/a><\/li>\n<li><strong>\u00danete a la red<\/strong> Forma parte del grupo de WhatsApp de la Red \u201cRepensando la Educaci\u00f3n desde el Antirracismo\u201d, donde compartimos ideas, experiencias y noticias.<\/li>\n<li><strong>Deja tu rese\u00f1a:<\/strong> Comenta sobre los recursos: cu\u00e9ntanos si lo has usado, c\u00f3mo te ha servido y qu\u00e9 impacto tuvo. Tus aportes ayudan a la comunidad educativa global.<\/li>\n<li><strong>Colabora con MAD \u00c1frica<\/strong> Si quieres implicarte m\u00e1s de cerca, escr\u00edbenos a <a href=\"mailto:madafrica@madafrica.es\">madafrica@madafrica.es<\/a>. Siempre buscamos alianzas y manos amigas para seguir transformando la educaci\u00f3n.<\/li>\n<\/ol>\n<div class=\"wp-block-group alignfull is-content-justification-center\" style=\"margin-top:0;margin-bottom:0\">\n<div class=\"wp-block-group__inner-container is-layout-constrained wp-block-group-is-layout-constrained\">\n<div style=\"height:var(--wp--preset--spacing--20)\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<div style=\"height:100px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<div class=\"wp-block-group alignwide\">\n<div class=\"wp-block-group__inner-container is-layout-flow wp-block-group-is-layout-flow\">\n<div class=\"wp-block-columns alignwide are-vertically-aligned-top is-layout-flex wp-container-core-columns-is-layout-ac3ebc3b wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-vertically-aligned-top is-content-justification-left is-layout-constrained wp-container-core-column-is-layout-02d07192 wp-block-column-is-layout-constrained\">\n<h1 class=\"wp-block-heading\">Descubre un reino de oportunidades.<\/h1>\n<\/div>\n<div class=\"wp-block-column is-vertically-aligned-top is-layout-flow wp-block-column-is-layout-flow\" style=\"flex-basis:40%\">\n<p>Explorando el complejo tapiz de la vida, las opciones revelan rutas hacia lo excepcional, requiriendo innovaci\u00f3n, curiosidad y valent\u00eda para un viaje profundamente satisfactorio.<\/p>\n<div class=\"wp-block-buttons is-layout-flex wp-block-buttons-is-layout-flex\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\">Empezar<\/a><\/div>\n<\/div>\n<\/div>\n<\/div>\n<div style=\"height:var(--wp--preset--spacing--20)\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" src=\"https:\/\/pd.w.org\/2023\/07\/44364b18862589f06.53436652.jpg\" alt=\"\" style=\"aspect-ratio:16\/9;object-fit:cover\"\/><\/figure>\n<\/div>\n<\/div>\n<div style=\"height:var(--wp--preset--spacing--20)\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/div>\n<\/div>\n\n<\/p>\n<\/p>\n<div class=\"wp-block-buttons is-content-justification-center is-layout-flex wp-container-core-buttons-is-layout-16018d1d wp-block-buttons-is-layout-flex\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link wp-element-button\" href=\"http:\/\/penkode-headless.local\/participa\/\">ver m\u00e1s<\/a><\/div>\n<\/div>\n<\/p>\n<div style=\"height:77px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<\/p>\n<h1 class=\"wp-block-heading has-text-align-left\">\u00daltimos Recursos<\/h1><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Penkode Next Headless: WordPress Headless con Next.js Penkode Theme es un tema de WordPress dise\u00f1ado para trabajar en modo headless.Convierte tu WordPress en un gestor de contenidos moderno y lo conecta con un frontend en Next.js, sin plugins pesados ni configuraciones complicadas. En pocas palabras: un Theme ligero que convierte WordPress en una API y [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"front-page.php","meta":{"footnotes":""},"class_list":["post-2","page","type-page","status-publish","hentry"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v26.1.1 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\r\n<title>UI Components - PENKODE - WP Headless Theme<\/title>\r\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\r\n<link rel=\"canonical\" href=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:locale\" content=\"es_ES\" \/>\r\n<meta property=\"og:type\" content=\"article\" \/>\r\n<meta property=\"og:title\" content=\"UI Components - PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"og:description\" content=\"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]\" \/>\r\n<meta property=\"og:url\" content=\"http:\/\/penkode-headless.local\/ui-components\/\" \/>\r\n<meta property=\"og:site_name\" content=\"PENKODE - WP Headless Theme\" \/>\r\n<meta property=\"article:modified_time\" content=\"2025-10-09T10:20:21+00:00\" \/>\r\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\r\n<meta name=\"twitter:label1\" content=\"Tiempo de lectura\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutos\" \/>\r\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"url\":\"http:\/\/penkode-headless.local\/ui-components\/\",\"name\":\"UI Components - PENKODE - WP Headless Theme\",\"isPartOf\":{\"@id\":\"http:\/\/penkode-headless.local\/#website\"},\"datePublished\":\"2025-10-05T06:26:57+00:00\",\"dateModified\":\"2025-10-09T10:20:21+00:00\",\"breadcrumb\":{\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\"},\"inLanguage\":\"es\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"http:\/\/penkode-headless.local\/ui-components\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"http:\/\/penkode-headless.local\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"UI Components\"}]},{\"@type\":\"WebSite\",\"@id\":\"http:\/\/penkode-headless.local\/#website\",\"url\":\"http:\/\/penkode-headless.local\/\",\"name\":\"PENKODE - WP Headless Theme\",\"description\":\"Headless WP theme framework for Next.js\/React\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"http:\/\/penkode-headless.local\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"es\"}]}<\/script>\r\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"UI Components - PENKODE - WP Headless Theme","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"http:\/\/penkode-headless.local\/ui-components\/","og_locale":"es_ES","og_type":"article","og_title":"UI Components - PENKODE - WP Headless Theme","og_description":"Welcome to the Interactive Elements page. Here, you&#8217;ll find various UI components designed to enhance user interaction, including buttons, accordions, and \u00absee more\u00bb sections. This page demonstrates how these elements can be used to create a dynamic and engaging user experience, showcasing their functionality and versatility in real-world applications. Explore and interact with these components [&hellip;]","og_url":"http:\/\/penkode-headless.local\/ui-components\/","og_site_name":"PENKODE - WP Headless Theme","article_modified_time":"2025-10-09T10:20:21+00:00","twitter_card":"summary_large_image","twitter_misc":{"Tiempo de lectura":"3 minutos"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"http:\/\/penkode-headless.local\/ui-components\/","url":"http:\/\/penkode-headless.local\/ui-components\/","name":"UI Components - PENKODE - WP Headless Theme","isPartOf":{"@id":"http:\/\/penkode-headless.local\/#website"},"datePublished":"2025-10-05T06:26:57+00:00","dateModified":"2025-10-09T10:20:21+00:00","breadcrumb":{"@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb"},"inLanguage":"es","potentialAction":[{"@type":"ReadAction","target":["http:\/\/penkode-headless.local\/ui-components\/"]}]},{"@type":"BreadcrumbList","@id":"http:\/\/penkode-headless.local\/ui-components\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"http:\/\/penkode-headless.local\/"},{"@type":"ListItem","position":2,"name":"UI Components"}]},{"@type":"WebSite","@id":"http:\/\/penkode-headless.local\/#website","url":"http:\/\/penkode-headless.local\/","name":"PENKODE - WP Headless Theme","description":"Headless WP theme framework for Next.js\/React","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"http:\/\/penkode-headless.local\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"es"}]}},"_links":{"self":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/2","targetHints":{"allow":["GET"]}}],"collection":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/comments?post=2"}],"version-history":[{"count":36,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/2\/revisions"}],"predecessor-version":[{"id":366,"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/pages\/2\/revisions\/366"}],"wp:attachment":[{"href":"http:\/\/penkode-headless.local\/wp-json\/wp\/v2\/media?parent=2"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}]","status":200,"url":"http://penkode-headless.local/wp-json/wp/v2/pages"},"revalidate":3600,"tags":[]}