{"kind":"FETCH","data":{"headers":{"access-control-allow-credentials":"true","access-control-allow-headers":"Authorization, X-WP-Nonce, Content-Disposition, Content-MD5, Content-Type","access-control-allow-methods":"GET","access-control-allow-origin":"http://localhost:3000","access-control-expose-headers":"X-WP-Total, X-WP-TotalPages, Link","allow":"GET","connection":"keep-alive","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Tue, 14 Oct 2025 20:51:31 GMT","link":"<http://penkode-headless.local/wp-json/>; rel=\"https://api.w.org/\"","server":"nginx/1.26.1","transfer-encoding":"chunked","vary":"Accept-Encoding, Origin","x-content-type-options":"nosniff","x-powered-by":"PHP/8.2.27","x-robots-tag":"noindex","x-wp-total":"1","x-wp-totalpages":"1"},"body":"","status":200,"url":"http://penkode-headless.local/wp-json/wp/v2/pages?slug=ui-components&_embed"},"revalidate":3600,"tags":[]}